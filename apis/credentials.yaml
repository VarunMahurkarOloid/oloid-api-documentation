openapi: 3.0.3
info:
  title: User Credential Documentation
  version: 1.0.0
  description: API documentation for user credentials.
  license:
    name: Apache 2.0
    url: https://www.oloid.ai
servers:
  - url: https://api.oloiddev.com
paths:
  /credentials/user/password/{oloID}/{credentialID}:
    get:
      summary: Get user password.
      description: This endpoint retrieves the password for a specific credential with
        the given ID.
      operationId: getUserPasswordByCredentialID
      tags:
        - /credentials/user/password
      parameters:
        - name: oloID
          in: path
          required: true
          schema:
            type: string
        - name: credentialID
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/Credential"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
    delete:
      summary: delete user password
      description: It is to delete user password
      operationId: deleteUserPasswordCredential
      tags:
        - /credentials/user/password
      parameters:
        - in: path
          name: oloID
          required: true
          schema:
            type: string
            description: The unique OloID of the user.
            pattern: ^[0-9a-fA-F]{32}$
            example: 70a4f870d7ef11ef97ef7fd6a9ac4856
            minLength: 32
            maxLength: 32
            nullable: false
        - name: credentialID
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/user/password:
    post:
      summary: Create user password
      description: Create user password
      operationId: createUserPasswordCredential
      tags:
        - /credentials/user/password
      requestBody:
        description: User credential details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credential"
              required:
                - OloID
                - UserType
                - UserName
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: Success
                data: b8f967502fc921fh23d9dd12954f32408
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
    put:
      summary: Update User Credentials for password-related information.
      description: Update User Credentials with additional identifiers and settings.
      operationId: updateUserPasswordCredential
      tags:
        - /credentials/user/password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credential"
              required:
                - OloID
                - CredentialID
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: Success
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/shared/password/{settingType}:
    get:
      summary: Get shared password.
      description: Get shared password by settingtype.
      operationId: getSharedPasswordByID
      tags:
        - /credentials/shared/password
      parameters:
        - name: settingType
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/Credential"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/shared/password:
    post:
      summary: Create a shared password.
      description: This is to create a new shared password credential.
      operationId: createSharedPasswordCredential
      tags:
        - /credentials/shared/password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credential"
              required:
                - SettingType
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                message: Success
                data: SharedCredential-cb568d002ff451f08fc3b7774d4ce964
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
    put:
      summary: Update shared Credentials.
      description: Update shared Credentials.
      operationId: updateSharedPasswordCredential
      tags:
        - /credentials/shared/password
      requestBody:
        description: Shared credential update details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credential"
              required:
                - SettingType
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/shared/passwords:
    get:
      summary: Get all shared Credentials.
      description: Get all shared Credentials.
      operationId: getAllSharedPasswordCredentials
      tags:
        - /credentials/shared/password
      parameters:
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
        - name: search
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/CredentialSharedpassword"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/shared/passwords/assign:
    post:
      summary: Assign shared credentials to users.
      description: Assign shared credentials to assignees with a specified execution type.
      operationId: assignSharedPasswordCredential
      tags:
        - /credentials/shared/password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                Credentials:
                  type: array
                  items:
                    type: string
                    nullable: true
                Assignees:
                  type: array
                  items:
                    type: string
                    nullable: true
                ExecutionType:
                  type: string
                  nullable: true
              required:
                - Credentials
                - Assignees
                - ExecutionType
      responses:
        "200":
          description: Credentials assigned successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/AssignsharedCredential"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/shared/passwords/list:
    get:
      summary: to retrieve a list of shared passwords.
      description: to retrieve a list of shared passwords.
      operationId: listAllSharedPasswordCredentials
      parameters:
        - name: pageSize
          in: query
          required: true
          schema:
            type: integer
        - name: lastEvaluatedKey
          in: query
          required: true
          schema:
            type: string
      tags:
        - /credentials/shared/password
      responses:
        "200":
          description: Retrieved shared passwords list successfully.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/CredentialSharedpassword"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/appinvite:
    post:
      summary: To create the app invite.
      description: To create the app invite.
      operationId: sendAppInvite
      tags:
        - /credentials/appinvite
      requestBody:
        content:
          application/json:
            schema:
              title: Send App Invite request Schema
              required:
                - PrimaryID
              type: object
              properties:
                PrimaryID:
                  type: string
                  nullable: true
              additionalProperties: false
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    type: object
                    properties:
                      Message:
                        type: string
                        nullable: true
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/user/passwordless/verify:
    post:
      summary: Verify Passwordless Credentials.
      description: Verify Passwordless Credentials.
      operationId: verifyUserPasswordlessCredential
      tags:
        - /credentials/user/passwordless/verify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ApplicationID:
                  type: string
                  pattern: ^[a-fA-F0-9]{32}$
                  maxLength: 32
                  minLength: 32
                  nullable: false
                  example: 70a4f870d7ef11ef97ef7fd6a9ac4856
                BadgeCode:
                  type: string
                  nullable: true
                EndpointID:
                  type: string
                  pattern: ^[a-zA-Z0-9]{6}$
                  minLength: 6
                  maxLength: 6
                  nullable: false
                Transaction:
                  type: object
              required:
                - ApplicationID
                - BadgeCode
                - EndpointID
      responses:
        "200":
          description: 200 response
          content: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/bluetooth:
    post:
      summary: Create Bluetooth Credentials.
      description: This API endpoint is used to create Bluetooth credentials.
      operationId: createBluetoothCred
      tags:
        - /credentials/bluetooth
      requestBody:
        content:
          application/json:
            schema:
              title: Create BLE credential request Schema
              required:
                - PrimaryID
                - ValidityEnd
                - ValidityStart
              type: object
              properties:
                ValidityEnd:
                  type: string
                  format: date-time
                  nullable: true
                ValidityStart:
                  type: string
                  format: date-time
                  nullable: true
                PrimaryID:
                  type: string
                  nullable: true
                EncryptToken:
                  type: boolean
                  nullable: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                title: Create BLE credential response schema
                type: object
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    type: object
                    properties:
                      ValidityStart:
                        type: number
                        nullable: true
                      ValidityEnd:
                        type: number
                        nullable: true
                      Token:
                        type: array
                        items:
                          type: integer
                          nullable: true
                        nullable: true
                      RawToken:
                        type: array
                        items:
                          type: integer
                          nullable: true
                        nullable: true
                      CreatedOn:
                        type: string
                        format: date-time
                        nullable: true
                      CredentialID:
                        type: string
                        nullable: true
                      IsEncrypted:
                        type: boolean
                        nullable: true
                      Status:
                        type: string
                        nullable: true
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/bluetooth/custom:
    post:
      summary: Custom Bluetooth Credentials.
      description: Custom Bluetooth Credentials.
      operationId: createCustomBluetoothCred
      tags:
        - /credentials/bluetooth
      requestBody:
        content:
          application/json:
            schema:
              title: Create BLE Custom credential request Schema
              required:
                - CardNumber
                - CardType
                - FacilityCode
              type: object
              properties:
                CardNumber:
                  type: number
                  nullable: true
                CardType:
                  type: string
                  nullable: true
                FacilityCode:
                  type: number
                  nullable: true
              additionalProperties: false
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                title: Create BLE Custom credential response schema
                type: object
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    type: object
                    properties:
                      Binary:
                        type: string
                        nullable: true
                      EncryptedBinary:
                        type: string
                        nullable: true
                      ValidityEnd:
                        type: number
                        nullable: true
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/bluetooth/decodeParityBit:
    post:
      summary: Decode Parity Bit.
      description: Decode Parity Bit.
      operationId: decodeParityBit
      tags:
        - /credentials/bluetooth
      requestBody:
        content:
          application/json:
            schema:
              title: Decode Parity Bit request Schema
              required:
                - BadgeId
                - FacilityCode
              type: object
              properties:
                CredentialFormat:
                  type: object
                  nullable: true
                FacilityCode:
                  type: number
                  nullable: true
                BadgeId:
                  type: string
                  nullable: true
              additionalProperties: false
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                title: Create decode parity bit response schema
                type: object
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    type: object
                    properties:
                      Binary:
                        type: array
                        items:
                          oneOf:
                            - type: number
                            - type: string
                        nullable: true
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/bluetooth/verify:
    post:
      summary: Verify Bluetooth Credentials.
      description: Verify Bluetooth Credentials.
      operationId: verifyBluetoothCred
      tags:
        - /credentials/bluetooth
      requestBody:
        content:
          application/json:
            schema:
              title: Verify BLE credential request Schema
              required:
                - Token
              type: object
              properties:
                Token:
                  type: array
                  items:
                    type: integer
                    nullable: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                title: Verify BLE response schema
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/CredentialVerify"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/face/additional-check/verify:
    post:
      summary: Face Additional-check Verify.
      description: Face Additional-check Verify.
      operationId: getAdditionalFaceCheckStatus
      tags:
        - /credentials/credential
      requestBody:
        content:
          application/json:
            schema:
              required:
                - CapturedFace
              type: object
              additionalProperties: false
              properties:
                OloID:
                  type: string
                  description: The unique OloID of the user.
                  pattern: ^[0-9a-fA-F]{32}$
                  example: 70a4f870d7ef11ef97ef7fd6a9ac4856
                  minLength: 32
                  maxLength: 32
                  nullable: false
                LivelinessConfidence:
                  type: number
                  nullable: true
                LivelinessProbability:
                  type: number
                  nullable: true
                FaceMatchThreshold:
                  type: number
                  nullable: true
                CompareFace:
                  type: boolean
                  nullable: true
                CapturedFace:
                  type: string
                  nullable: true
                CheckLiveliness:
                  type: boolean
                  nullable: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/Facecheck"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/face/login:
    post:
      summary: Face Login.
      description: Face Login.
      operationId: loginWithFace
      tags:
        - /credentials/credential
      requestBody:
        content:
          application/json:
            schema:
              required:
                - PrimaryID
                - FaceImage
                - TenantID
                - TenantName
              type: object
              additionalProperties: false
              properties:
                TenantID:
                  type: string
                  description: The unique ID of the tenant.
                  nullable: false
                  minLength: 16
                  maxLength: 16
                  pattern: ^[0-9a-fA-F]{16}$
                  example: FA0280A8A0E64DF9
                TenantName:
                  type: string
                  nullable: true
                FaceImage:
                  type: string
                  nullable: true
                PrimaryID:
                  type: string
                  nullable: true
                SimilarityThreshold:
                  type: integer
                  nullable: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                title: Face login response
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/FaceLogin"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/search/facelogin:
    post:
      summary: Search Face Login.
      description: Search Face Login.
      operationId: searchFaceAndLogin
      tags:
        - /credentials/credential
      requestBody:
        content:
          application/json:
            schema:
              required:
                - PrimaryID
                - FaceImage
                - TenantID
                - TenantName
              type: object
              additionalProperties: false
              properties:
                TenantID:
                  type: string
                  description: The unique ID of the tenant.
                  nullable: false
                  minLength: 16
                  maxLength: 16
                  pattern: ^[0-9a-fA-F]{16}$
                  example: FA0280A8A0E64DF9
                TenantName:
                  type: string
                  nullable: true
                FaceImage:
                  type: string
                  nullable: true
                PrimaryID:
                  type: string
                  nullable: true
                SimilarityThreshold:
                  type: integer
                  nullable: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/FaceLogin"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/qrcode/login:
    post:
      summary: QR Code Login.
      description: QR Code Login.
      operationId: loginWithQRCode
      tags:
        - /credentials/credential
      requestBody:
        content:
          application/json:
            schema:
              title: QRCode login request Schema
              required:
                - ChallengeCode
                - Connections
                - TenantID
                - TenantName
              type: object
              properties:
                Connections:
                  type: array
                TenantID:
                  type: string
                  description: The unique ID of the tenant.
                  nullable: false
                  minLength: 16
                  maxLength: 16
                  pattern: ^[0-9a-fA-F]{16}$
                  example: FA0280A8A0E64DF9
                TenantName:
                  type: string
                ChallengeCode:
                  type: string
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/Descriptor"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/idsearch1/login:
    post:
      summary: idsearch1 Login.
      description: idsearch1 Login.
      operationId: loginWithBadge
      tags:
        - /credentials/credential
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Pin:
                  type: string
                  nullable: true
                IDSearch1:
                  type: string
                  nullable: true
                IDSearch2:
                  type: string
                  nullable: true
                SecondaryID:
                  type: string
                  nullable: true
                Email:
                  type: string
                  nullable: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/FaceLogin"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/bluetooth/generateTokens:
    post:
      summary: Bluetooth Generate Tokens.
      description: Bluetooth Search Tokens.
      operationId: createBluetoothCredInBulk
      tags:
        - /credentials/bluetooth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BleUsertoken"
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                title: Create BLE Bulk credential response schema
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/bluetooth/deleteTokens:
    post:
      summary: idsearch1 Login.
      description: idsearch1 Login.
      operationId: deleteBluetoothCredInBulk
      tags:
        - /credentials/bluetooth
      requestBody:
        content:
          application/json:
            schema:
              title: Delete BLE bulk credential request Schema
              type: object
              properties:
                Connections:
                  type: array
                  items:
                    type: string
                    nullable: true
                  nullable: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                title: Create BLE Bulk credential response schema
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/cardformats:
    get:
      summary: Get cardformats credentials
      description: This endpoint helps you get all the cardformats credentials
      operationId: getCardFormats
      tags:
        - /credentials/cardformats
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CardFormat"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/identity/verify:
    post:
      summary: Verify Identity Credentials.
      description: Verify Identity Credentials.
      operationId: verifyUserByIdentityField
      tags:
        - /credentials/credential
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                EndpointID:
                  type: string
                  pattern: ^[a-zA-Z0-9]{6}$
                  minLength: 6
                  maxLength: 6
                  nullable: false
                Pin:
                  type: string
                  nullable: true
                IDSearch1:
                  type: string
                  nullable: true
                IDSearch2:
                  type: string
                  nullable: true
                SecondaryID:
                  type: string
                  nullable: true
                Email:
                  type: string
                  nullable: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/CredentialVerify"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/multi/appinvites:
    post:
      summary: Multi Appinvites.
      description: Multi Appinvites.
      operationId: sendAppInvitesMultipleUsers
      tags:
        - /credentials/multi/appinvites
      requestBody:
        content:
          application/json:
            schema:
              required:
                - PrimaryIDs
              type: object
              properties:
                AppType:
                  type: string
                  nullable: true
                PrimaryIDs:
                  type: array
                  items:
                    type: string
                    nullable: true
              additionalProperties: false
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/Credential"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /credentials/user/passwords/{oloID}:
    get:
      summary: Get user passwords.
      description: This endpoint helps you get user passwords using oloID.
      operationId: getUserPasswordCredentials
      tags:
        - /credentials/user/passwords
      parameters:
        - name: oloID
          in: path
          required: true
          schema:
            type: string
            description: The unique OloID of the user.
            pattern: ^[0-9a-fA-F]{32}$
            example: 70a4f870d7ef11ef97ef7fd6a9ac4856
            minLength: 32
            maxLength: 32
            nullable: false
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/Credential"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /qrcode/create:
    post:
      summary: Create a QR code.
      description: This endpoint will help you create a unique QR code for your oloID.
      operationId: createAuthChallenge
      tags:
        - /qrcode
      requestBody:
        content:
          application/json:
            schema:
              required:
                - expiry
                - oloid
              type: object
              additionalProperties: false
              properties:
                expiry:
                  type: number
                  nullable: true
                generateImage:
                  type: boolean
                  nullable: true
                oloid:
                  type: string
                  description: The unique OloID of the user.
                  pattern: ^[0-9a-fA-F]{32}$
                  example: 70a4f870d7ef11ef97ef7fd6a9ac4856
                  minLength: 32
                  maxLength: 32
                  nullable: false
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/Cloudkey"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /qrcode/{oloid}:
    delete:
      summary: Delete the QR Code for a particular OloID
      description: Delete a specific QR code.
      operationId: deleteQRCode
      tags:
        - /qrcode
      parameters:
        - name: oloid
          in: path
          required: true
          schema:
            type: string
            description: The unique OloID of the user.
            pattern: ^[0-9a-fA-F]{32}$
            example: 70a4f870d7ef11ef97ef7fd6a9ac4856
            minLength: 32
            maxLength: 32
            nullable: false
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /users/{oloID}/faces:
    post:
      summary: This endpoint is used to upload a user's face image to the server.
      description: This endpoint is used to upload a user's face image to the server.
      operationId: addFace
      tags:
        - /users/oloid/face
      parameters:
        - name: bestShot
          in: query
          schema:
            type: string
        - name: oloID
          in: path
          required: true
          schema:
            type: string
            pattern: ^[a-fA-F0-9]{32}$
            example: 70a4f870d7ef11ef97ef7fd6a9ac4856
            minLength: 32
            maxLength: 32
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - FaceImage
              type: object
              properties:
                FaceImage:
                  type: string
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                title: Add face response schema
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/Addface"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /users/{oloID}/faces/remove:
    put:
      summary: Delete a face of oloid
      description: This endpoint helps you delete the face of the oloID
      operationId: deleteFace
      tags:
        - /users/oloid/face
      parameters:
        - name: oloID
          in: path
          required: true
          schema:
            type: string
            pattern: ^[a-fA-F0-9]{32}$
            example: 70a4f870d7ef11ef97ef7fd6a9ac4856
            minLength: 32
            maxLength: 32
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              required:
                - FaceIds
              type: object
              additionalProperties: false
              properties:
                DeleteAll:
                  type: boolean
                  nullable: true
                FaceIds:
                  type: array
                  items:
                    type: string
                    nullable: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/RemoveFace"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /access-control/badges:
    post:
      summary: Create credential format
      description: This endpoint helps you create credential format for access-control
        badges.
      operationId: createCFormat
      tags:
        - /access-control/badges
      requestBody:
        content:
          application/json:
            schema:
              required:
                - Name
                - DataFormat
                - Length
                - FacilityCode
                - FacilityCodeStart
                - FacilityCodeLength
              $ref: "#/components/schemas/Content"
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/Content"
                additionalProperties: false
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /cloudkey/create:
    post:
      summary: Create cloudkey
      description: This endpoint helps you create a cloudkey.
      operationId: createKey
      tags:
        - /cloudkey
      requestBody:
        content:
          application/json:
            schema:
              required:
                - Oloid
                - ValidityEnd
                - ValidityStart
              type: object
              additionalProperties: false
              properties:
                Oloid:
                  type: string
                  description: The unique OloID of the user.
                  pattern: ^[0-9a-fA-F]{32}$
                  example: 70a4f870d7ef11ef97ef7fd6a9ac4856
                  minLength: 32
                  maxLength: 32
                  nullable: false
                ValidityEnd:
                  type: integer
                  nullable: true
                ValidityStart:
                  type: integer
                  nullable: true
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/Cloudkey"
                additionalProperties: false
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /cloudkey/{oloid}:
    delete:
      summary: Delete a cloudkey
      description: This endpoint helps you delete a cloudkey for an oloID
      operationId: deleteKey
      tags:
        - /cloudkey
      parameters:
        - name: oloid
          in: path
          required: true
          schema:
            type: string
            pattern: ^[a-fA-F0-9]{32}$
            example: 70a4f870d7ef11ef97ef7fd6a9ac4856
            minLength: 32
            maxLength: 32
            nullable: false
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                    nullable: true
                  data:
                    $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
  /users/{oloID}:
    put:
      summary: This endpoint allows the client to UPDATE/CREATE/DELETE the
        NFC-ID/PIN/BLUETOOTH of a specific user.
      description: This endpoint allows the client to NFC-ID/UPDATE/CREATE/DELETE the
        PIN/BLUETOOTH of a specific user.To delete PIN just add empty string in
        the IDSearch2(For NFC)/PIN/BLUETOOTH field.
      operationId: updateUser
      parameters:
        - name: oloID
          in: path
          required: true
          schema:
            type: string
            description: The unique OloID of the user.
            pattern: ^[0-9a-fA-F]{32}$
            example: 70a4f870d7ef11ef97ef7fd6a9ac4856
            minLength: 32
            maxLength: 32
            nullable: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Credential"
      responses:
        "200":
          description: 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadRequestExample"
        "401":
          description: "Unauthorized: Access token is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/UnauthorizedExample"
        "404":
          description: Does not exist.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/NotFoundExample"
        "500":
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/InternalServerErrorExample"
        "502":
          description: "Bad Gateway: The proxy server received an invalid response."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                default:
                  $ref: "#/components/examples/BadGatewayExample"
components:
  securitySchemes:
    AuthToken:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    Credential:
      $ref: ./schemas/Credential.json
    User:
      $ref: ./schemas/User.json
    Application:
      $ref: ./schemas/Application.json
    CredentialSharedpassword:
      type: object
      additionalProperties: false
      properties:
        passwords:
          type: array
          items:
            $ref: "#/components/schemas/Credential"
    AssignsharedCredential:
      type: object
      additionalProperties: false
      properties:
        overallSuccess:
          type: boolean
          nullable: true
        overallResult:
          type: array
          items:
            $ref: "#/components/schemas/Credential"
        failedCredentials:
          type: array
          items:
            $ref: "#/components/schemas/Credential"
    FaceLogin:
      type: object
      additionalProperties: false
      properties:
        Token:
          type: string
          nullable: true
        User:
          $ref: "#/components/schemas/User"
    Facecheck:
      type: object
      additionalProperties: false
      properties:
        LivelinessResult:
          $ref: "#/components/schemas/Liveliness"
        FaceCompareResult:
          $ref: "#/components/schemas/Liveliness"
    Liveliness:
      $ref: ./common/Liveliness.json
    BleUsertoken:
      required:
        - Connections
      type: object
      properties:
        EncryptToken:
          type: boolean
          nullable: true
        ValidityEnd:
          type: integer
          nullable: true
        ValidityStart:
          type: integer
          nullable: true
        Connections:
          type: array
          items:
            type: string
            nullable: true
      additionalProperties: false
    CardFormat:
      type: object
      additionalProperties: false
      properties:
        Key:
          type: string
          nullable: true
          example: CardFormats/26.json
        LastModified:
          type: string
          format: date-time
          nullable: true
          example: 2023-05-16T10:57:26.000Z
        ETag:
          type: string
          nullable: true
          example: '"bc9956fed620ccfde5c6542207581359"'
        Size:
          type: integer
          nullable: true
          example: 822
        StorageClass:
          type: string
          example: STANDARD
        BLEEndTime:
          type: integer
          nullable: true
        BLEInitTime:
          type: integer
          nullable: true
        IDSearchInitTime:
          type: integer
          nullable: true
        IDSearchEndTime:
          type: integer
          nullable: true
        Content:
          $ref: "#/components/schemas/Content"
    Content:
      $ref: ./common/Content.json
    Addface:
      type: object
      additionalProperties: false
      properties:
        Faces:
          $ref: "#/components/schemas/Face"
        Descriptor:
          $ref: "#/components/schemas/Descriptor"
    Descriptor:
      type: object
      additionalProperties: false
      properties:
        success:
          type: boolean
          nullable: true
        data:
          $ref: "#/components/schemas/Worker"
          nullable: true
        Token:
          type: string
          nullable: true
        User:
          $ref: "#/components/schemas/User"
          nullable: true
    Worker:
      $ref: ./common/Worker.json
    RemoveFace:
      type: object
      additionalProperties: false
      properties:
        deletedFaces:
          type: array
          items:
            $ref: "#/components/schemas/Face"
    Face:
      $ref: ./common/Face.json
    Endpoint:
      $ref: ./schemas/Endpoint.json
    Cloudkey:
      $ref: ./common/Cloudkey.json
    CredentialVerify:
      type: object
      additionalProperties: false
      properties:
        isAuthorized:
          type: boolean
          nullable: true
        metadata:
          $ref: "#/components/schemas/CardFormat"
        user:
          $ref: "#/components/schemas/User"
    ErrorResponse:
      $ref: ./common/Message.json
  examples:
    BadRequestExample:
      value:
        status: "400"
        message: Bad Request
    UnauthorizedExample:
      value:
        status: "401"
        message: "Unauthorized: Access token is missing or invalid"
    NotFoundExample:
      value:
        status: "404"
        message: Not Found
    InternalServerErrorExample:
      value:
        status: "500"
        message: Internal Server Error - Server encountered an unexpected condition
    BadGatewayExample:
      value:
        status: "502"
        message: "Bad Gateway: The proxy server received an invalid response from an
          upstream server"
security:
  - AuthToken: []
